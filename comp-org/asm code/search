# some test data
.data 
	arr: .word 2, 3, -3, -5, 12, 3, -6, 13
	size: .word 8
	
.text
main: 
	# loading arguments with a2, a3, a4
	addi a2, x0, -3
	la a3, arr
	lw a4, size
	
	jal ra search
	j terminate
	
search: 
	addi sp, sp, -8
	sw s3, 0(sp)
	sw s4, 4(sp)
	# store array address
	# this is a trick the professor used (not sure why)
	add s3, x0, a3
	add s4, x0, a4
	# initialize loop variable
	add t0, x0, x0
	# index found ? set the default index to -1
	# so if it isn't found, return -1 by default
	addi t2, x0, -1
	loop1: 
		bge t0, s4, exit1
		# get address of array in t3
		slli t3, t0, 2
		add t3, t3, s3
		lw t4, 0(t3)
		if: bne t4, a2, else
			# if it is equal
			addi t2, t2, 1
			# set index = found
			add t2, t2, t0
			add a0, x0, t2
			jr ra
		else: 
			# do nothing
		addi t0, t0, 1
		j loop1
	exit1: 
		add a0, x0, t2
		
		lw s3, 0(sp)
		lw s4, 4(sp)
		addi sp, sp, 8
		
		jr ra

terminate: 
